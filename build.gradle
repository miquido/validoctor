buildscript {
    ext.kotlin_version = '1.7.20'
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'com.miquido'
version '2.1.4'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

test {
    testLogging {
        events "failed"
        exceptionFormat "short"
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is ->
        p.load(is)
    }
    p.each { name, value ->
        ext[name] = value
    }
} else {
    ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
    ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
    ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'validoctor'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Validoctor'
                description = 'Lib for rule based validation of entities'
                url = 'https://github.com/miquido/validoctor'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'karol.wartak@miquido.com'
                        name = 'Karol Wartak'
                        email = 'karol.wartak@miquido.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com:miquido/validoctor.git'
                    developerConnection = 'scm:git:ssh://github.com:miquido/validoctor.git'
                    url = 'https://github.com/miquido/validoctor'
                }
            }
        }
    }
    repositories {
        maven {
            name = "sonatype"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
